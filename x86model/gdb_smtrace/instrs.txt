
main:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 18                	add    %bl,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 e3                	add    %ah,%bl
 8048199:	c5 6f 96             	lds    -0x6a(%edi),%ebp
 804819c:	f1                   	icebp  
 804819d:	dd db                	fstp   %st(3)
 804819f:	16                   	push   %ss
 80481a0:	d3                   	(bad)  
 80481a1:	35 b9 5d 63 01       	xor    $0x1635db9,%eax
 80481a6:	a9 01 45 ae b9       	test   $0xb9ae4501,%eax
 80481ab:	f4                   	hlt    

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	04 00                	add    $0x0,%al
 80481b2:	00 00                	add    %al,(%eax)
 80481b4:	01 00                	add    %eax,(%eax)
 80481b6:	00 00                	add    %al,(%eax)
 80481b8:	05 00 00 00 00       	add    $0x0,%eax
 80481bd:	20 00                	and    %al,(%eax)
 80481bf:	20 00                	and    %al,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 04 00             	add    %al,(%eax,%eax,1)
 80481c6:	00 00                	add    %al,(%eax)
 80481c8:	ad                   	lods   %ds:(%esi),%eax
 80481c9:	4b                   	dec    %ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x128>

Disassembly of section .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	29 00                	sub    %eax,(%eax)
	...
 80481e6:	00 00                	add    %al,(%eax)
 80481e8:	12 00                	adc    (%eax),%al
 80481ea:	00 00                	add    %al,(%eax)
 80481ec:	01 00                	add    %eax,(%eax)
	...
 80481f6:	00 00                	add    %al,(%eax)
 80481f8:	20 00                	and    %al,(%eax)
 80481fa:	00 00                	add    %al,(%eax)
 80481fc:	30 00                	xor    %al,(%eax)
	...
 8048206:	00 00                	add    %al,(%eax)
 8048208:	12 00                	adc    (%eax),%al
 804820a:	00 00                	add    %al,(%eax)
 804820c:	1a 00                	sbb    (%eax),%al
 804820e:	00 00                	add    %al,(%eax)
 8048210:	dc 84 04 08 04 00 00 	faddl  0x408(%esp,%eax,1)
 8048217:	00 11                	add    %dl,(%ecx)
 8048219:	00 0f                	add    %cl,(%edi)
	...

Disassembly of section .dynstr:

0804821c <.dynstr>:
 804821c:	00 5f 5f             	add    %bl,0x5f(%edi)
 804821f:	67 6d                	insl   (%dx),%es:(%di)
 8048221:	6f                   	outsl  %ds:(%esi),(%dx)
 8048222:	6e                   	outsb  %ds:(%esi),(%dx)
 8048223:	5f                   	pop    %edi
 8048224:	73 74                	jae    804829a <_init-0x1a>
 8048226:	61                   	popa   
 8048227:	72 74                	jb     804829d <_init-0x17>
 8048229:	5f                   	pop    %edi
 804822a:	5f                   	pop    %edi
 804822b:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 804822f:	63 2e                	arpl   %bp,(%esi)
 8048231:	73 6f                	jae    80482a2 <_init-0x12>
 8048233:	2e 36 00 5f 49       	cs add %bl,%cs:%ss:0x49(%edi)
 8048238:	4f                   	dec    %edi
 8048239:	5f                   	pop    %edi
 804823a:	73 74                	jae    80482b0 <_init-0x4>
 804823c:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048243:	64 
 8048244:	00 70 72             	add    %dh,0x72(%eax)
 8048247:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%esi),%ebp
 804824e:	6c                   	insb   (%dx),%es:(%edi)
 804824f:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 8048256:	72 74                	jb     80482cc <_init+0x18>
 8048258:	5f                   	pop    %edi
 8048259:	6d                   	insl   (%dx),%es:(%edi)
 804825a:	61                   	popa   
 804825b:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%esi),%ebp
 8048262:	43                   	inc    %ebx
 8048263:	5f                   	pop    %edi
 8048264:	32 2e                	xor    (%esi),%ch
 8048266:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

08048268 <.gnu.version>:
 8048268:	00 00                	add    %al,(%eax)
 804826a:	02 00                	add    (%eax),%al
 804826c:	00 00                	add    %al,(%eax)
 804826e:	02 00                	add    (%eax),%al
 8048270:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

08048274 <.gnu.version_r>:
 8048274:	01 00                	add    %eax,(%eax)
 8048276:	01 00                	add    %eax,(%eax)
 8048278:	10 00                	adc    %al,(%eax)
 804827a:	00 00                	add    %al,(%eax)
 804827c:	10 00                	adc    %al,(%eax)
 804827e:	00 00                	add    %al,(%eax)
 8048280:	00 00                	add    %al,(%eax)
 8048282:	00 00                	add    %al,(%eax)
 8048284:	10 69 69             	adc    %ch,0x69(%ecx)
 8048287:	0d 00 00 02 00       	or     $0x20000,%eax
 804828c:	42                   	inc    %edx
 804828d:	00 00                	add    %al,(%eax)
 804828f:	00 00                	add    %al,(%eax)
 8048291:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

08048294 <.rel.dyn>:
 8048294:	f0 9f                	lock lahf 
 8048296:	04 08                	add    $0x8,%al
 8048298:	06                   	push   %es
 8048299:	02 00                	add    (%eax),%al
	...

Disassembly of section .rel.plt:

0804829c <.rel.plt>:
 804829c:	00 a0 04 08 07 01    	add    %ah,0x1070804(%eax)
 80482a2:	00 00                	add    %al,(%eax)
 80482a4:	04 a0                	add    $0xa0,%al
 80482a6:	04 08                	add    $0x8,%al
 80482a8:	07                   	pop    %es
 80482a9:	02 00                	add    (%eax),%al
 80482ab:	00 08                	add    %cl,(%eax)
 80482ad:	a0 04 08 07 03       	mov    0x3070804,%al
	...

Disassembly of section .init:

080482b4 <_init>:
 80482b4:	53                   	push   %ebx
 80482b5:	83 ec 08             	sub    $0x8,%esp
 80482b8:	e8 00 00 00 00       	call   80482bd <_init+0x9>
 80482bd:	5b                   	pop    %ebx
 80482be:	81 c3 37 1d 00 00    	add    $0x1d37,%ebx
 80482c4:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80482ca:	85 c0                	test   %eax,%eax
 80482cc:	74 05                	je     80482d3 <_init+0x1f>
 80482ce:	e8 3d 00 00 00       	call   8048310 <__gmon_start__@plt>
 80482d3:	e8 e8 00 00 00       	call   80483c0 <frame_dummy>
 80482d8:	e8 b3 01 00 00       	call   8048490 <__do_global_ctors_aux>
 80482dd:	83 c4 08             	add    $0x8,%esp
 80482e0:	5b                   	pop    %ebx
 80482e1:	c3                   	ret    

Disassembly of section .plt:

080482f0 <printf@plt-0x10>:
 80482f0:	ff 35 f8 9f 04 08    	pushl  0x8049ff8
 80482f6:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 80482fc:	00 00                	add    %al,(%eax)
	...

08048300 <printf@plt>:
 8048300:	ff 25 00 a0 04 08    	jmp    *0x804a000
 8048306:	68 00 00 00 00       	push   $0x0
 804830b:	e9 e0 ff ff ff       	jmp    80482f0 <_init+0x3c>

08048310 <__gmon_start__@plt>:
 8048310:	ff 25 04 a0 04 08    	jmp    *0x804a004
 8048316:	68 08 00 00 00       	push   $0x8
 804831b:	e9 d0 ff ff ff       	jmp    80482f0 <_init+0x3c>

08048320 <__libc_start_main@plt>:
 8048320:	ff 25 08 a0 04 08    	jmp    *0x804a008
 8048326:	68 10 00 00 00       	push   $0x10
 804832b:	e9 c0 ff ff ff       	jmp    80482f0 <_init+0x3c>

Disassembly of section .text:

08048330 <_start>:
 8048330:	31 ed                	xor    %ebp,%ebp
 8048332:	5e                   	pop    %esi
 8048333:	89 e1                	mov    %esp,%ecx
 8048335:	83 e4 f0             	and    $0xfffffff0,%esp
 8048338:	50                   	push   %eax
 8048339:	54                   	push   %esp
 804833a:	52                   	push   %edx
 804833b:	68 80 84 04 08       	push   $0x8048480
 8048340:	68 10 84 04 08       	push   $0x8048410
 8048345:	51                   	push   %ecx
 8048346:	56                   	push   %esi
 8048347:	68 e4 83 04 08       	push   $0x80483e4
 804834c:	e8 cf ff ff ff       	call   8048320 <__libc_start_main@plt>
 8048351:	f4                   	hlt    
 8048352:	90                   	nop
 8048353:	90                   	nop
 8048354:	90                   	nop
 8048355:	90                   	nop
 8048356:	90                   	nop
 8048357:	90                   	nop
 8048358:	90                   	nop
 8048359:	90                   	nop
 804835a:	90                   	nop
 804835b:	90                   	nop
 804835c:	90                   	nop
 804835d:	90                   	nop
 804835e:	90                   	nop
 804835f:	90                   	nop

08048360 <__do_global_dtors_aux>:
 8048360:	55                   	push   %ebp
 8048361:	89 e5                	mov    %esp,%ebp
 8048363:	53                   	push   %ebx
 8048364:	83 ec 04             	sub    $0x4,%esp
 8048367:	80 3d 14 a0 04 08 00 	cmpb   $0x0,0x804a014
 804836e:	75 3f                	jne    80483af <__do_global_dtors_aux+0x4f>
 8048370:	a1 18 a0 04 08       	mov    0x804a018,%eax
 8048375:	bb 20 9f 04 08       	mov    $0x8049f20,%ebx
 804837a:	81 eb 1c 9f 04 08    	sub    $0x8049f1c,%ebx
 8048380:	c1 fb 02             	sar    $0x2,%ebx
 8048383:	83 eb 01             	sub    $0x1,%ebx
 8048386:	39 d8                	cmp    %ebx,%eax
 8048388:	73 1e                	jae    80483a8 <__do_global_dtors_aux+0x48>
 804838a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048390:	83 c0 01             	add    $0x1,%eax
 8048393:	a3 18 a0 04 08       	mov    %eax,0x804a018
 8048398:	ff 14 85 1c 9f 04 08 	call   *0x8049f1c(,%eax,4)
 804839f:	a1 18 a0 04 08       	mov    0x804a018,%eax
 80483a4:	39 d8                	cmp    %ebx,%eax
 80483a6:	72 e8                	jb     8048390 <__do_global_dtors_aux+0x30>
 80483a8:	c6 05 14 a0 04 08 01 	movb   $0x1,0x804a014
 80483af:	83 c4 04             	add    $0x4,%esp
 80483b2:	5b                   	pop    %ebx
 80483b3:	5d                   	pop    %ebp
 80483b4:	c3                   	ret    
 80483b5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80483b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080483c0 <frame_dummy>:
 80483c0:	55                   	push   %ebp
 80483c1:	89 e5                	mov    %esp,%ebp
 80483c3:	83 ec 18             	sub    $0x18,%esp
 80483c6:	a1 24 9f 04 08       	mov    0x8049f24,%eax
 80483cb:	85 c0                	test   %eax,%eax
 80483cd:	74 12                	je     80483e1 <frame_dummy+0x21>
 80483cf:	b8 00 00 00 00       	mov    $0x0,%eax
 80483d4:	85 c0                	test   %eax,%eax
 80483d6:	74 09                	je     80483e1 <frame_dummy+0x21>
 80483d8:	c7 04 24 24 9f 04 08 	movl   $0x8049f24,(%esp)
 80483df:	ff d0                	call   *%eax
 80483e1:	c9                   	leave  
 80483e2:	c3                   	ret    
 80483e3:	90                   	nop

080483e4 <main>:
 80483e4:	55                   	push   %ebp
 80483e5:	89 e5                	mov    %esp,%ebp
 80483e7:	83 e4 f0             	and    $0xfffffff0,%esp
 80483ea:	83 ec 10             	sub    $0x10,%esp
 80483ed:	b8 e0 84 04 08       	mov    $0x80484e0,%eax
 80483f2:	89 04 24             	mov    %eax,(%esp)
 80483f5:	e8 06 ff ff ff       	call   8048300 <printf@plt>
 80483fa:	b8 00 00 00 00       	mov    $0x0,%eax
 80483ff:	c9                   	leave  
 8048400:	c3                   	ret    
 8048401:	90                   	nop
 8048402:	90                   	nop
 8048403:	90                   	nop
 8048404:	90                   	nop
 8048405:	90                   	nop
 8048406:	90                   	nop
 8048407:	90                   	nop
 8048408:	90                   	nop
 8048409:	90                   	nop
 804840a:	90                   	nop
 804840b:	90                   	nop
 804840c:	90                   	nop
 804840d:	90                   	nop
 804840e:	90                   	nop
 804840f:	90                   	nop

08048410 <__libc_csu_init>:
 8048410:	55                   	push   %ebp
 8048411:	57                   	push   %edi
 8048412:	56                   	push   %esi
 8048413:	53                   	push   %ebx
 8048414:	e8 69 00 00 00       	call   8048482 <__i686.get_pc_thunk.bx>
 8048419:	81 c3 db 1b 00 00    	add    $0x1bdb,%ebx
 804841f:	83 ec 1c             	sub    $0x1c,%esp
 8048422:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048426:	8d bb 20 ff ff ff    	lea    -0xe0(%ebx),%edi
 804842c:	e8 83 fe ff ff       	call   80482b4 <_init>
 8048431:	8d 83 20 ff ff ff    	lea    -0xe0(%ebx),%eax
 8048437:	29 c7                	sub    %eax,%edi
 8048439:	c1 ff 02             	sar    $0x2,%edi
 804843c:	85 ff                	test   %edi,%edi
 804843e:	74 29                	je     8048469 <__libc_csu_init+0x59>
 8048440:	31 f6                	xor    %esi,%esi
 8048442:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048448:	8b 44 24 38          	mov    0x38(%esp),%eax
 804844c:	89 2c 24             	mov    %ebp,(%esp)
 804844f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048453:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048457:	89 44 24 04          	mov    %eax,0x4(%esp)
 804845b:	ff 94 b3 20 ff ff ff 	call   *-0xe0(%ebx,%esi,4)
 8048462:	83 c6 01             	add    $0x1,%esi
 8048465:	39 fe                	cmp    %edi,%esi
 8048467:	75 df                	jne    8048448 <__libc_csu_init+0x38>
 8048469:	83 c4 1c             	add    $0x1c,%esp
 804846c:	5b                   	pop    %ebx
 804846d:	5e                   	pop    %esi
 804846e:	5f                   	pop    %edi
 804846f:	5d                   	pop    %ebp
 8048470:	c3                   	ret    
 8048471:	eb 0d                	jmp    8048480 <__libc_csu_fini>
 8048473:	90                   	nop
 8048474:	90                   	nop
 8048475:	90                   	nop
 8048476:	90                   	nop
 8048477:	90                   	nop
 8048478:	90                   	nop
 8048479:	90                   	nop
 804847a:	90                   	nop
 804847b:	90                   	nop
 804847c:	90                   	nop
 804847d:	90                   	nop
 804847e:	90                   	nop
 804847f:	90                   	nop

08048480 <__libc_csu_fini>:
 8048480:	f3 c3                	repz ret 

08048482 <__i686.get_pc_thunk.bx>:
 8048482:	8b 1c 24             	mov    (%esp),%ebx
 8048485:	c3                   	ret    
 8048486:	90                   	nop
 8048487:	90                   	nop
 8048488:	90                   	nop
 8048489:	90                   	nop
 804848a:	90                   	nop
 804848b:	90                   	nop
 804848c:	90                   	nop
 804848d:	90                   	nop
 804848e:	90                   	nop
 804848f:	90                   	nop

08048490 <__do_global_ctors_aux>:
 8048490:	55                   	push   %ebp
 8048491:	89 e5                	mov    %esp,%ebp
 8048493:	53                   	push   %ebx
 8048494:	83 ec 04             	sub    $0x4,%esp
 8048497:	a1 14 9f 04 08       	mov    0x8049f14,%eax
 804849c:	83 f8 ff             	cmp    $0xffffffff,%eax
 804849f:	74 13                	je     80484b4 <__do_global_ctors_aux+0x24>
 80484a1:	bb 14 9f 04 08       	mov    $0x8049f14,%ebx
 80484a6:	66 90                	xchg   %ax,%ax
 80484a8:	83 eb 04             	sub    $0x4,%ebx
 80484ab:	ff d0                	call   *%eax
 80484ad:	8b 03                	mov    (%ebx),%eax
 80484af:	83 f8 ff             	cmp    $0xffffffff,%eax
 80484b2:	75 f4                	jne    80484a8 <__do_global_ctors_aux+0x18>
 80484b4:	83 c4 04             	add    $0x4,%esp
 80484b7:	5b                   	pop    %ebx
 80484b8:	5d                   	pop    %ebp
 80484b9:	c3                   	ret    
 80484ba:	90                   	nop
 80484bb:	90                   	nop

Disassembly of section .fini:

080484bc <_fini>:
 80484bc:	53                   	push   %ebx
 80484bd:	83 ec 08             	sub    $0x8,%esp
 80484c0:	e8 00 00 00 00       	call   80484c5 <_fini+0x9>
 80484c5:	5b                   	pop    %ebx
 80484c6:	81 c3 2f 1b 00 00    	add    $0x1b2f,%ebx
 80484cc:	e8 8f fe ff ff       	call   8048360 <__do_global_dtors_aux>
 80484d1:	83 c4 08             	add    $0x8,%esp
 80484d4:	5b                   	pop    %ebx
 80484d5:	c3                   	ret    

Disassembly of section .rodata:

080484d8 <_fp_hw>:
 80484d8:	03 00                	add    (%eax),%eax
	...

080484dc <_IO_stdin_used>:
 80484dc:	01 00                	add    %eax,(%eax)
 80484de:	02 00                	add    (%eax),%al
 80484e0:	68 65 6c 6c 6f       	push   $0x6f6c6c65
 80484e5:	20 77 6f             	and    %dh,0x6f(%edi)
 80484e8:	72 6c                	jb     8048556 <_IO_stdin_used+0x7a>
 80484ea:	64                   	fs
	...

Disassembly of section .eh_frame_hdr:

080484ec <.eh_frame_hdr>:
 80484ec:	01 1b                	add    %ebx,(%ebx)
 80484ee:	03 3b                	add    (%ebx),%edi
 80484f0:	30 00                	xor    %al,(%eax)
 80484f2:	00 00                	add    %al,(%eax)
 80484f4:	05 00 00 00 04       	add    $0x4000000,%eax
 80484f9:	fe                   	(bad)  
 80484fa:	ff                   	(bad)  
 80484fb:	ff 4c 00 00          	decl   0x0(%eax,%eax,1)
 80484ff:	00 f8                	add    %bh,%al
 8048501:	fe                   	(bad)  
 8048502:	ff                   	(bad)  
 8048503:	ff 70 00             	pushl  0x0(%eax)
 8048506:	00 00                	add    %al,(%eax)
 8048508:	24 ff                	and    $0xff,%al
 804850a:	ff                   	(bad)  
 804850b:	ff 90 00 00 00 94    	call   *-0x6c000000(%eax)
 8048511:	ff                   	(bad)  
 8048512:	ff                   	(bad)  
 8048513:	ff cc                	dec    %esp
 8048515:	00 00                	add    %al,(%eax)
 8048517:	00 96 ff ff ff e0    	add    %dl,-0x1f000001(%esi)
 804851d:	00 00                	add    %al,(%eax)
	...

Disassembly of section .eh_frame:

08048520 <__FRAME_END__-0xc0>:
 8048520:	14 00                	adc    $0x0,%al
 8048522:	00 00                	add    %al,(%eax)
 8048524:	00 00                	add    %al,(%eax)
 8048526:	00 00                	add    %al,(%eax)
 8048528:	01 7a 52             	add    %edi,0x52(%edx)
 804852b:	00 01                	add    %al,(%ecx)
 804852d:	7c 08                	jl     8048537 <_IO_stdin_used+0x5b>
 804852f:	01 1b                	add    %ebx,(%ebx)
 8048531:	0c 04                	or     $0x4,%al
 8048533:	04 88                	add    $0x88,%al
 8048535:	01 00                	add    %eax,(%eax)
 8048537:	00 20                	add    %ah,(%eax)
 8048539:	00 00                	add    %al,(%eax)
 804853b:	00 1c 00             	add    %bl,(%eax,%eax,1)
 804853e:	00 00                	add    %al,(%eax)
 8048540:	b0 fd                	mov    $0xfd,%al
 8048542:	ff                   	(bad)  
 8048543:	ff 40 00             	incl   0x0(%eax)
 8048546:	00 00                	add    %al,(%eax)
 8048548:	00 0e                	add    %cl,(%esi)
 804854a:	08 46 0e             	or     %al,0xe(%esi)
 804854d:	0c 4a                	or     $0x4a,%al
 804854f:	0f 0b                	ud2    
 8048551:	74 04                	je     8048557 <_IO_stdin_used+0x7b>
 8048553:	78 00                	js     8048555 <_IO_stdin_used+0x79>
 8048555:	3f                   	aas    
 8048556:	1a 3b                	sbb    (%ebx),%bh
 8048558:	2a 32                	sub    (%edx),%dh
 804855a:	24 22                	and    $0x22,%al
 804855c:	1c 00                	sbb    $0x0,%al
 804855e:	00 00                	add    %al,(%eax)
 8048560:	40                   	inc    %eax
 8048561:	00 00                	add    %al,(%eax)
 8048563:	00 80 fe ff ff 1d    	add    %al,0x1dfffffe(%eax)
 8048569:	00 00                	add    %al,(%eax)
 804856b:	00 00                	add    %al,(%eax)
 804856d:	41                   	inc    %ecx
 804856e:	0e                   	push   %cs
 804856f:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048575:	59                   	pop    %ecx
 8048576:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 8048579:	04 00                	add    $0x0,%al
 804857b:	00 38                	add    %bh,(%eax)
 804857d:	00 00                	add    %al,(%eax)
 804857f:	00 60 00             	add    %ah,0x0(%eax)
 8048582:	00 00                	add    %al,(%eax)
 8048584:	8c fe                	mov    %?,%esi
 8048586:	ff                   	(bad)  
 8048587:	ff 61 00             	jmp    *0x0(%ecx)
 804858a:	00 00                	add    %al,(%eax)
 804858c:	00 41 0e             	add    %al,0xe(%ecx)
 804858f:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 8048595:	87 03                	xchg   %eax,(%ebx)
 8048597:	41                   	inc    %ecx
 8048598:	0e                   	push   %cs
 8048599:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 804859f:	83 05 4e 0e 30 02 4a 	addl   $0x4a,0x2300e4e
 80485a6:	0e                   	push   %cs
 80485a7:	14 41                	adc    $0x41,%al
 80485a9:	0e                   	push   %cs
 80485aa:	10 c3                	adc    %al,%bl
 80485ac:	41                   	inc    %ecx
 80485ad:	0e                   	push   %cs
 80485ae:	0c c6                	or     $0xc6,%al
 80485b0:	41                   	inc    %ecx
 80485b1:	0e                   	push   %cs
 80485b2:	08 c7                	or     %al,%bh
 80485b4:	41                   	inc    %ecx
 80485b5:	0e                   	push   %cs
 80485b6:	04 c5                	add    $0xc5,%al
 80485b8:	10 00                	adc    %al,(%eax)
 80485ba:	00 00                	add    %al,(%eax)
 80485bc:	9c                   	pushf  
 80485bd:	00 00                	add    %al,(%eax)
 80485bf:	00 c0                	add    %al,%al
 80485c1:	fe                   	(bad)  
 80485c2:	ff                   	(bad)  
 80485c3:	ff 02                	incl   (%edx)
 80485c5:	00 00                	add    %al,(%eax)
 80485c7:	00 00                	add    %al,(%eax)
 80485c9:	00 00                	add    %al,(%eax)
 80485cb:	00 10                	add    %dl,(%eax)
 80485cd:	00 00                	add    %al,(%eax)
 80485cf:	00 b0 00 00 00 ae    	add    %dh,-0x52000000(%eax)
 80485d5:	fe                   	(bad)  
 80485d6:	ff                   	(bad)  
 80485d7:	ff 04 00             	incl   (%eax,%eax,1)
 80485da:	00 00                	add    %al,(%eax)
 80485dc:	00 00                	add    %al,(%eax)
	...

080485e0 <__FRAME_END__>:
 80485e0:	00 00                	add    %al,(%eax)
	...

Disassembly of section .ctors:

08049f14 <__CTOR_LIST__>:
 8049f14:	ff                   	(bad)  
 8049f15:	ff                   	(bad)  
 8049f16:	ff                   	(bad)  
 8049f17:	ff 00                	incl   (%eax)

08049f18 <__CTOR_END__>:
 8049f18:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dtors:

08049f1c <__DTOR_LIST__>:
 8049f1c:	ff                   	(bad)  
 8049f1d:	ff                   	(bad)  
 8049f1e:	ff                   	(bad)  
 8049f1f:	ff 00                	incl   (%eax)

08049f20 <__DTOR_END__>:
 8049f20:	00 00                	add    %al,(%eax)
	...

Disassembly of section .jcr:

08049f24 <__JCR_END__>:
 8049f24:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f28 <_DYNAMIC>:
 8049f28:	01 00                	add    %eax,(%eax)
 8049f2a:	00 00                	add    %al,(%eax)
 8049f2c:	10 00                	adc    %al,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	0c 00                	or     $0x0,%al
 8049f32:	00 00                	add    %al,(%eax)
 8049f34:	b4 82                	mov    $0x82,%ah
 8049f36:	04 08                	add    $0x8,%al
 8049f38:	0d 00 00 00 bc       	or     $0xbc000000,%eax
 8049f3d:	84 04 08             	test   %al,(%eax,%ecx,1)
 8049f40:	f5                   	cmc    
 8049f41:	fe                   	(bad)  
 8049f42:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f45:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f4c:	1c 82                	sbb    $0x82,%al
 8049f4e:	04 08                	add    $0x8,%al
 8049f50:	06                   	push   %es
 8049f51:	00 00                	add    %al,(%eax)
 8049f53:	00 cc                	add    %cl,%ah
 8049f55:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f5c:	4c                   	dec    %esp
 8049f5d:	00 00                	add    %al,(%eax)
 8049f5f:	00 0b                	add    %cl,(%ebx)
 8049f61:	00 00                	add    %al,(%eax)
 8049f63:	00 10                	add    %dl,(%eax)
 8049f65:	00 00                	add    %al,(%eax)
 8049f67:	00 15 00 00 00 00    	add    %dl,0x0
 8049f6d:	00 00                	add    %al,(%eax)
 8049f6f:	00 03                	add    %al,(%ebx)
 8049f71:	00 00                	add    %al,(%eax)
 8049f73:	00 f4                	add    %dh,%ah
 8049f75:	9f                   	lahf   
 8049f76:	04 08                	add    $0x8,%al
 8049f78:	02 00                	add    (%eax),%al
 8049f7a:	00 00                	add    %al,(%eax)
 8049f7c:	18 00                	sbb    %al,(%eax)
 8049f7e:	00 00                	add    %al,(%eax)
 8049f80:	14 00                	adc    $0x0,%al
 8049f82:	00 00                	add    %al,(%eax)
 8049f84:	11 00                	adc    %eax,(%eax)
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	17                   	pop    %ss
 8049f89:	00 00                	add    %al,(%eax)
 8049f8b:	00 9c 82 04 08 11 00 	add    %bl,0x110804(%edx,%eax,4)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	94                   	xchg   %eax,%esp
 8049f95:	82                   	(bad)  
 8049f96:	04 08                	add    $0x8,%al
 8049f98:	12 00                	adc    (%eax),%al
 8049f9a:	00 00                	add    %al,(%eax)
 8049f9c:	08 00                	or     %al,(%eax)
 8049f9e:	00 00                	add    %al,(%eax)
 8049fa0:	13 00                	adc    (%eax),%eax
 8049fa2:	00 00                	add    %al,(%eax)
 8049fa4:	08 00                	or     %al,(%eax)
 8049fa6:	00 00                	add    %al,(%eax)
 8049fa8:	fe                   	(bad)  
 8049fa9:	ff                   	(bad)  
 8049faa:	ff 6f 74             	ljmp   *0x74(%edi)
 8049fad:	82                   	(bad)  
 8049fae:	04 08                	add    $0x8,%al
 8049fb0:	ff                   	(bad)  
 8049fb1:	ff                   	(bad)  
 8049fb2:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fb5:	00 00                	add    %al,(%eax)
 8049fb7:	00 f0                	add    %dh,%al
 8049fb9:	ff                   	(bad)  
 8049fba:	ff 6f 68             	ljmp   *0x68(%edi)
 8049fbd:	82                   	(bad)  
 8049fbe:	04 08                	add    $0x8,%al
	...

Disassembly of section .got:

08049ff0 <.got>:
 8049ff0:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

08049ff4 <_GLOBAL_OFFSET_TABLE_>:
 8049ff4:	28 9f 04 08 00 00    	sub    %bl,0x804(%edi)
 8049ffa:	00 00                	add    %al,(%eax)
 8049ffc:	00 00                	add    %al,(%eax)
 8049ffe:	00 00                	add    %al,(%eax)
 804a000:	06                   	push   %es
 804a001:	83 04 08 16          	addl   $0x16,(%eax,%ecx,1)
 804a005:	83 04 08 26          	addl   $0x26,(%eax,%ecx,1)
 804a009:	83                   	.byte 0x83
 804a00a:	04 08                	add    $0x8,%al

Disassembly of section .data:

0804a00c <__data_start>:
 804a00c:	00 00                	add    %al,(%eax)
	...

0804a010 <__dso_handle>:
 804a010:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

0804a014 <completed.6159>:
 804a014:	00 00                	add    %al,(%eax)
	...

0804a018 <dtor_idx.6161>:
 804a018:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x804823c>
   a:	74 75                	je     81 <_init-0x8048233>
   c:	2f                   	das    
   d:	4c                   	dec    %esp
   e:	69 6e 61 72 6f 20 34 	imul   $0x34206f72,0x61(%esi),%ebp
  15:	2e 36 2e 33 2d 31 75 	cs ss xor %cs:%ss:0x75627531,%ebp
  1c:	62 75 
  1e:	6e                   	outsb  %ds:(%esi),(%dx)
  1f:	74 75                	je     96 <_init-0x804821e>
  21:	35 29 20 34 2e       	xor    $0x2e342029,%eax
  26:	36 2e 33 00          	ss xor %cs:%ss:(%eax),%eax

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	1c 00                	sbb    $0x0,%al
   2:	00 00                	add    %al,(%eax)
   4:	02 00                	add    (%eax),%al
   6:	00 00                	add    %al,(%eax)
   8:	00 00                	add    %al,(%eax)
   a:	04 00                	add    $0x0,%al
   c:	00 00                	add    %al,(%eax)
   e:	00 00                	add    %al,(%eax)
  10:	e4 83                	in     $0x83,%al
  12:	04 08                	add    $0x8,%al
  14:	1d 00 00 00 00       	sbb    $0x0,%eax
  19:	00 00                	add    %al,(%eax)
  1b:	00 00                	add    %al,(%eax)
  1d:	00 00                	add    %al,(%eax)
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	87 00                	xchg   %eax,(%eax)
   2:	00 00                	add    %al,(%eax)
   4:	02 00                	add    (%eax),%al
   6:	00 00                	add    %al,(%eax)
   8:	00 00                	add    %al,(%eax)
   a:	04 01                	add    $0x1,%al
   c:	65 00 00             	add    %al,%gs:(%eax)
   f:	00 01                	add    %al,(%ecx)
  11:	5e                   	pop    %esi
  12:	00 00                	add    %al,(%eax)
  14:	00 00                	add    %al,(%eax)
  16:	00 00                	add    %al,(%eax)
  18:	00 e4                	add    %ah,%ah
  1a:	83 04 08 01          	addl   $0x1,(%eax,%ecx,1)
  1e:	84 04 08             	test   %al,(%eax,%ecx,1)
  21:	00 00                	add    %al,(%eax)
  23:	00 00                	add    %al,(%eax)
  25:	02 04 07             	add    (%edi,%eax,1),%al
  28:	51                   	push   %ecx
  29:	00 00                	add    %al,(%eax)
  2b:	00 02                	add    %al,(%edx)
  2d:	01 08                	add    %ecx,(%eax)
  2f:	71 00                	jno    31 <_init-0x8048283>
  31:	00 00                	add    %al,(%eax)
  33:	02 02                	add    (%edx),%al
  35:	07                   	pop    %es
  36:	2a 00                	sub    (%eax),%al
  38:	00 00                	add    %al,(%eax)
  3a:	02 04 07             	add    (%edi,%eax,1),%al
  3d:	4c                   	dec    %esp
  3e:	00 00                	add    %al,(%eax)
  40:	00 02                	add    %al,(%edx)
  42:	01 06                	add    %eax,(%esi)
  44:	73 00                	jae    46 <_init-0x804826e>
  46:	00 00                	add    %al,(%eax)
  48:	02 02                	add    (%edx),%al
  4a:	05 3d 00 00 00       	add    $0x3d,%eax
  4f:	03 04 05 69 6e 74 00 	add    0x746e69(,%eax,1),%eax
  56:	02 08                	add    (%eax),%cl
  58:	05 84 00 00 00       	add    $0x84,%eax
  5d:	02 08                	add    (%eax),%cl
  5f:	07                   	pop    %es
  60:	47                   	inc    %edi
  61:	00 00                	add    %al,(%eax)
  63:	00 02                	add    %al,(%edx)
  65:	04 05                	add    $0x5,%al
  67:	89 00                	mov    %eax,(%eax)
  69:	00 00                	add    %al,(%eax)
  6b:	02 01                	add    (%ecx),%al
  6d:	06                   	push   %es
  6e:	7a 00                	jp     70 <_init-0x8048244>
  70:	00 00                	add    %al,(%eax)
  72:	04 01                	add    $0x1,%al
  74:	7f 00                	jg     76 <_init-0x804823e>
  76:	00 00                	add    %al,(%eax)
  78:	01 1c 4f             	add    %ebx,(%edi,%ecx,2)
  7b:	00 00                	add    %al,(%eax)
  7d:	00 e4                	add    %ah,%ah
  7f:	83 04 08 01          	addl   $0x1,(%eax,%ecx,1)
  83:	84 04 08             	test   %al,(%eax,%ecx,1)
  86:	00 00                	add    %al,(%eax)
  88:	00 00                	add    %al,(%eax)
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%ecx)
   2:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
   8:	0e                   	push   %cs
   9:	1b 0e                	sbb    (%esi),%ecx
   b:	11 01                	adc    %eax,(%ecx)
   d:	12 01                	adc    (%ecx),%al
   f:	10 06                	adc    %al,(%esi)
  11:	00 00                	add    %al,(%eax)
  13:	02 24 00             	add    (%eax,%eax,1),%ah
  16:	0b 0b                	or     (%ebx),%ecx
  18:	3e 0b 03             	or     %ds:(%ebx),%eax
  1b:	0e                   	push   %cs
  1c:	00 00                	add    %al,(%eax)
  1e:	03 24 00             	add    (%eax,%eax,1),%esp
  21:	0b 0b                	or     (%ebx),%ecx
  23:	3e 0b 03             	or     %ds:(%ebx),%eax
  26:	08 00                	or     %al,(%eax)
  28:	00 04 2e             	add    %al,(%esi,%ebp,1)
  2b:	00 3f                	add    %bh,(%edi)
  2d:	0c 03                	or     $0x3,%al
  2f:	0e                   	push   %cs
  30:	3a 0b                	cmp    (%ebx),%cl
  32:	3b 0b                	cmp    (%ebx),%ecx
  34:	49                   	dec    %ecx
  35:	13 11                	adc    (%ecx),%edx
  37:	01 12                	add    %edx,(%edx)
  39:	01 40 06             	add    %eax,0x6(%eax)
  3c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	35 00 00 00 02       	xor    $0x2000000,%eax
   5:	00 1d 00 00 00 01    	add    %bl,0x1000000
   b:	01 fb                	add    %edi,%ebx
   d:	0e                   	push   %cs
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
  13:	01 00                	add    %eax,(%eax)
  15:	00 00                	add    %al,(%eax)
  17:	01 00                	add    %eax,(%eax)
  19:	00 01                	add    %al,(%ecx)
  1b:	00 6d 61             	add    %ch,0x61(%ebp)
  1e:	69 6e 2e 63 00 00 00 	imul   $0x63,0x2e(%esi),%ebp
  25:	00 00                	add    %al,(%eax)
  27:	00 05 02 e4 83 04    	add    %al,0x483e402
  2d:	08 03                	or     %al,(%ebx)
  2f:	1b 01                	sbb    (%ecx),%eax
  31:	91                   	xchg   %eax,%ecx
  32:	c9                   	leave  
  33:	59                   	pop    %ecx
  34:	02 02                	add    (%edx),%al
  36:	00 01                	add    %al,(%ecx)
  38:	01                   	.byte 0x1

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	2f                   	das    
   1:	68 6f 6d 65 2f       	push   $0x2f656d6f
   6:	75 62                	jne    6a <_init-0x804824a>
   8:	75 6e                	jne    78 <_init-0x804823c>
   a:	74 75                	je     81 <_init-0x8048233>
   c:	2f                   	das    
   d:	44                   	inc    %esp
   e:	65                   	gs
   f:	73 6b                	jae    7c <_init-0x8048238>
  11:	74 6f                	je     82 <_init-0x8048232>
  13:	70 2f                	jo     44 <_init-0x8048270>
  15:	78 38                	js     4f <_init-0x8048265>
  17:	36                   	ss
  18:	6d                   	insl   (%dx),%es:(%edi)
  19:	6f                   	outsl  %ds:(%esi),(%dx)
  1a:	64                   	fs
  1b:	65                   	gs
  1c:	6c                   	insb   (%dx),%es:(%edi)
  1d:	2f                   	das    
  1e:	67 64 62 5f 73       	bound  %ebx,%fs:0x73(%bx)
  23:	6d                   	insl   (%dx),%es:(%edi)
  24:	74 72                	je     98 <_init-0x804821c>
  26:	61                   	popa   
  27:	63 65 00             	arpl   %sp,0x0(%ebp)
  2a:	73 68                	jae    94 <_init-0x8048220>
  2c:	6f                   	outsl  %ds:(%esi),(%dx)
  2d:	72 74                	jb     a3 <_init-0x8048211>
  2f:	20 75 6e             	and    %dh,0x6e(%ebp)
  32:	73 69                	jae    9d <_init-0x8048217>
  34:	67 6e                	outsb  %ds:(%si),(%dx)
  36:	65 64 20 69 6e       	gs and %ch,%fs:%gs:0x6e(%ecx)
  3b:	74 00                	je     3d <_init-0x8048277>
  3d:	73 68                	jae    a7 <_init-0x804820d>
  3f:	6f                   	outsl  %ds:(%esi),(%dx)
  40:	72 74                	jb     b6 <_init-0x80481fe>
  42:	20 69 6e             	and    %ch,0x6e(%ecx)
  45:	74 00                	je     47 <_init-0x804826d>
  47:	6c                   	insb   (%dx),%es:(%edi)
  48:	6f                   	outsl  %ds:(%esi),(%dx)
  49:	6e                   	outsb  %ds:(%esi),(%dx)
  4a:	67 20 6c 6f          	and    %ch,0x6f(%si)
  4e:	6e                   	outsb  %ds:(%esi),(%dx)
  4f:	67 20 75 6e          	and    %dh,0x6e(%di)
  53:	73 69                	jae    be <_init-0x80481f6>
  55:	67 6e                	outsb  %ds:(%si),(%dx)
  57:	65 64 20 69 6e       	gs and %ch,%fs:%gs:0x6e(%ecx)
  5c:	74 00                	je     5e <_init-0x8048256>
  5e:	6d                   	insl   (%dx),%es:(%edi)
  5f:	61                   	popa   
  60:	69 6e 2e 63 00 47 4e 	imul   $0x4e470063,0x2e(%esi),%ebp
  67:	55                   	push   %ebp
  68:	20 43 20             	and    %al,0x20(%ebx)
  6b:	34 2e                	xor    $0x2e,%al
  6d:	36 2e 33 00          	ss xor %cs:%ss:(%eax),%eax
  71:	75 6e                	jne    e1 <_init-0x80481d3>
  73:	73 69                	jae    de <_init-0x80481d6>
  75:	67 6e                	outsb  %ds:(%si),(%dx)
  77:	65 64 20 63 68       	gs and %ah,%fs:%gs:0x68(%ebx)
  7c:	61                   	popa   
  7d:	72 00                	jb     7f <_init-0x8048235>
  7f:	6d                   	insl   (%dx),%es:(%edi)
  80:	61                   	popa   
  81:	69 6e 00 6c 6f 6e 67 	imul   $0x676e6f6c,0x0(%esi),%ebp
  88:	20 6c 6f 6e          	and    %ch,0x6e(%edi,%ebp,2)
  8c:	67 20 69 6e          	and    %ch,0x6e(%bx,%di)
  90:	74 00                	je     92 <_init-0x8048222>

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
   0:	00 00                	add    %al,(%eax)
   2:	00 00                	add    %al,(%eax)
   4:	01 00                	add    %eax,(%eax)
   6:	00 00                	add    %al,(%eax)
   8:	02 00                	add    (%eax),%al
   a:	74 04                	je     10 <_init-0x80482a4>
   c:	01 00                	add    %eax,(%eax)
   e:	00 00                	add    %al,(%eax)
  10:	03 00                	add    (%eax),%eax
  12:	00 00                	add    %al,(%eax)
  14:	02 00                	add    (%eax),%al
  16:	74 08                	je     20 <_init-0x8048294>
  18:	03 00                	add    (%eax),%eax
  1a:	00 00                	add    %al,(%eax)
  1c:	1c 00                	sbb    $0x0,%al
  1e:	00 00                	add    %al,(%eax)
  20:	02 00                	add    (%eax),%al
  22:	75 08                	jne    2c <_init-0x8048288>
  24:	1c 00                	sbb    $0x0,%al
  26:	00 00                	add    %al,(%eax)
  28:	1d 00 00 00 02       	sbb    $0x2000000,%eax
  2d:	00 74 04 00          	add    %dh,0x0(%esp,%eax,1)
  31:	00 00                	add    %al,(%eax)
  33:	00 00                	add    %al,(%eax)
  35:	00 00                	add    %al,(%eax)
	...
